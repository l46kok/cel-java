// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cel/expr/conformance/proto2/test_all_types.proto
// Protobuf Java Version: 4.29.3

package dev.cel.expr.conformance.proto2;

/**
 * <pre>
 * This proto has a required field.
 * </pre>
 *
 * Protobuf type {@code cel.expr.conformance.proto2.TestRequired}
 */
public final class TestRequired extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:cel.expr.conformance.proto2.TestRequired)
    TestRequiredOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      TestRequired.class.getName());
  }
  // Use TestRequired.newBuilder() to construct.
  private TestRequired(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private TestRequired() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dev.cel.expr.conformance.proto2.TestAllTypesProto.internal_static_cel_expr_conformance_proto2_TestRequired_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dev.cel.expr.conformance.proto2.TestAllTypesProto.internal_static_cel_expr_conformance_proto2_TestRequired_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dev.cel.expr.conformance.proto2.TestRequired.class, dev.cel.expr.conformance.proto2.TestRequired.Builder.class);
  }

  private int bitField0_;
  public static final int REQUIRED_INT32_FIELD_NUMBER = 1;
  private int requiredInt32_ = 0;
  /**
   * <code>required int32 required_int32 = 1;</code>
   * @return Whether the requiredInt32 field is set.
   */
  @java.lang.Override
  public boolean hasRequiredInt32() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>required int32 required_int32 = 1;</code>
   * @return The requiredInt32.
   */
  @java.lang.Override
  public int getRequiredInt32() {
    return requiredInt32_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRequiredInt32()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, requiredInt32_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, requiredInt32_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dev.cel.expr.conformance.proto2.TestRequired)) {
      return super.equals(obj);
    }
    dev.cel.expr.conformance.proto2.TestRequired other = (dev.cel.expr.conformance.proto2.TestRequired) obj;

    if (hasRequiredInt32() != other.hasRequiredInt32()) return false;
    if (hasRequiredInt32()) {
      if (getRequiredInt32()
          != other.getRequiredInt32()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRequiredInt32()) {
      hash = (37 * hash) + REQUIRED_INT32_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredInt32();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static dev.cel.expr.conformance.proto2.TestRequired parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static dev.cel.expr.conformance.proto2.TestRequired parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static dev.cel.expr.conformance.proto2.TestRequired parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dev.cel.expr.conformance.proto2.TestRequired prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This proto has a required field.
   * </pre>
   *
   * Protobuf type {@code cel.expr.conformance.proto2.TestRequired}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cel.expr.conformance.proto2.TestRequired)
      dev.cel.expr.conformance.proto2.TestRequiredOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.cel.expr.conformance.proto2.TestAllTypesProto.internal_static_cel_expr_conformance_proto2_TestRequired_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.cel.expr.conformance.proto2.TestAllTypesProto.internal_static_cel_expr_conformance_proto2_TestRequired_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.cel.expr.conformance.proto2.TestRequired.class, dev.cel.expr.conformance.proto2.TestRequired.Builder.class);
    }

    // Construct using dev.cel.expr.conformance.proto2.TestRequired.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      requiredInt32_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dev.cel.expr.conformance.proto2.TestAllTypesProto.internal_static_cel_expr_conformance_proto2_TestRequired_descriptor;
    }

    @java.lang.Override
    public dev.cel.expr.conformance.proto2.TestRequired getDefaultInstanceForType() {
      return dev.cel.expr.conformance.proto2.TestRequired.getDefaultInstance();
    }

    @java.lang.Override
    public dev.cel.expr.conformance.proto2.TestRequired build() {
      dev.cel.expr.conformance.proto2.TestRequired result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dev.cel.expr.conformance.proto2.TestRequired buildPartial() {
      dev.cel.expr.conformance.proto2.TestRequired result = new dev.cel.expr.conformance.proto2.TestRequired(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(dev.cel.expr.conformance.proto2.TestRequired result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.requiredInt32_ = requiredInt32_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dev.cel.expr.conformance.proto2.TestRequired) {
        return mergeFrom((dev.cel.expr.conformance.proto2.TestRequired)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dev.cel.expr.conformance.proto2.TestRequired other) {
      if (other == dev.cel.expr.conformance.proto2.TestRequired.getDefaultInstance()) return this;
      if (other.hasRequiredInt32()) {
        setRequiredInt32(other.getRequiredInt32());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasRequiredInt32()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              requiredInt32_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int requiredInt32_ ;
    /**
     * <code>required int32 required_int32 = 1;</code>
     * @return Whether the requiredInt32 field is set.
     */
    @java.lang.Override
    public boolean hasRequiredInt32() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 required_int32 = 1;</code>
     * @return The requiredInt32.
     */
    @java.lang.Override
    public int getRequiredInt32() {
      return requiredInt32_;
    }
    /**
     * <code>required int32 required_int32 = 1;</code>
     * @param value The requiredInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredInt32(int value) {

      requiredInt32_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 required_int32 = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredInt32() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requiredInt32_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:cel.expr.conformance.proto2.TestRequired)
  }

  // @@protoc_insertion_point(class_scope:cel.expr.conformance.proto2.TestRequired)
  private static final dev.cel.expr.conformance.proto2.TestRequired DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dev.cel.expr.conformance.proto2.TestRequired();
  }

  public static dev.cel.expr.conformance.proto2.TestRequired getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestRequired>
      PARSER = new com.google.protobuf.AbstractParser<TestRequired>() {
    @java.lang.Override
    public TestRequired parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TestRequired> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestRequired> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dev.cel.expr.conformance.proto2.TestRequired getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

